import{u as C,av as w,al as A,V as I,r as a,bv as j,b as S,bw as T,j as i,e as b,g as k,f as E}from"./index-BUhByw5-.js";import{E as B}from"./EmptyViewAbsoluteCentered-BwTiC7uu.js";import{G as O}from"./GridLayouts-DjHywIIJ.js";import{B as P}from"./BaseMangaGrid-BamD5zgz.js";import{u as R}from"./useAppTitleAndAction-BCCxoD1H.js";import"./Checkbox-C2LdXGBI.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-D3zrytm_.js";import"./SwitchBase-BUY0SvyW.js";import"./ListPreference-BCI5q3lx.js";import"./FormGroup-DLMeP1fq.js";import"./MangaGrid-G1n7nkOj.js";import"./useManageMangaLibraryState-C8IiloTu.js";import"./ThreeStateCheckboxInput-DeSumwlA.js";import"./CheckboxInput-B-X_PtOp.js";import"./Delete-CeRJuPrm.js";import"./Download-CjGYdfgK.js";import"./ChaptersDownloadActionMenuItems-BXT9RONA.js";import"./Trackers-COtG7wmP.js";import"./Card-BuZDRhIH.js";import"./ListCardContent-BkEf9i_O.js";import"./Avatar-BYrko8nL.js";import"./TextField-Bne0g5hL.js";import"./InputAdornment-BqPLfvyM.js";import"./CheckCircle-BjRlQ9o6.js";import"./Metadata-Dj2D-JVI.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-Iv3Nvr1R.js";import"./Link-3fTby9Sd.js";import"./NumberSetting-C_iQOwnu.js";import"./Slider-idzfSgD8.js";import"./useMobilePicker-BSTyjfiS.js";import"./Chip-DfoXJ8TD.js";import"./SelectSetting-j4pM108U.js";import"./Select-DnHqh16a.js";import"./Sync-oKwWFxDB.js";import"./use-merged-ref-CRDEdEt9.js";import"./ListCardAvatar-Dww6-f2m.js";import"./PlayArrow-CEzEn5Sk.js";import"./StyledFab-wIhFBHmA.js";import"./index-BfO-4uGf.js";import"./Virtuoso.util-0iMiPmvV.js";import"./useAppTitle-CZupxrDw.js";import"./useAppAction-Bnbni7Iv.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=w(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:j}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
