import{u as w,aw as C,am as A,W as I,r as a,bw as j,b as S,bx as T,j as i,e as b,g as k,f as E}from"./index-CusOy9-R.js";import{E as B}from"./EmptyViewAbsoluteCentered-CEJ77HI2.js";import{G as O}from"./GridLayouts-C6RPNbxb.js";import{B as P}from"./BaseMangaGrid-ZKiDUxSm.js";import{u as R}from"./useAppTitleAndAction-dZ83vLa_.js";import"./Checkbox-CoHpcnHi.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-Da9830a_.js";import"./SwitchBase-D71g4W7l.js";import"./ListPreference-CTHEJWTG.js";import"./FormGroup-xAlbe6p7.js";import"./MangaGrid-BHsQ-pzc.js";import"./useManageMangaLibraryState-CDFPEGXR.js";import"./ThreeStateCheckboxInput-C_Xe4mOe.js";import"./CheckboxInput-BBfOh9A4.js";import"./Delete-DAL_fWNH.js";import"./Download-ClEspQwa.js";import"./ChaptersDownloadActionMenuItems-BxsRcvZ2.js";import"./Trackers-COtG7wmP.js";import"./Card-C1HodbZi.js";import"./ListCardContent-CQ93eAmf.js";import"./Avatar-YtFcmlbF.js";import"./TextField-FhmEP2QG.js";import"./InputAdornment-DzFkB5OK.js";import"./CheckCircle-BNQPwbv-.js";import"./Metadata-DcPH3o2-.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-D2NRxEpw.js";import"./Link-Bio61wKe.js";import"./NumberSetting-BUckXRD8.js";import"./Slider-ClDBEPxh.js";import"./useMobilePicker-DdlRqwRM.js";import"./Chip-CB4SngO5.js";import"./SelectSetting-CLFakhQa.js";import"./Select-DkuzZCOq.js";import"./Sync-3jYXX2K-.js";import"./use-merged-ref-BmvWQ3p1.js";import"./ListCardAvatar-C36GT1bA.js";import"./PlayArrow-D9xzFeYY.js";import"./StyledFab-2odtzMCr.js";import"./index-C0gF87jv.js";import"./Virtuoso.util-B9wStQMx.js";import"./useAppTitle-Bu6Own5Z.js";import"./useAppAction-BL34INom.js";const Tr=()=>{var h,L;const{t:d}=w(),{sourceId:o}=C(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:j}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
