import{u as C,az as A,aq as I,Z as j,r as a,bG as w,b as S,bH as T,j as i,e as b,g as k,f as E}from"./index-BODSeEcu.js";import{E as B}from"./EmptyViewAbsoluteCentered-DDmWfOqL.js";import{G as O}from"./GridLayouts-xS2klQ3P.js";import{B as P}from"./BaseMangaGrid-BTIrIU5R.js";import{u as R}from"./useAppTitleAndAction-DjvPqS1-.js";import"./Checkbox-CioYox1s.js";import"./SwitchBase-BGJ0w6m2.js";import"./ListPreference-Dn2mK3Rd.js";import"./FormGroup-CiuXBMcc.js";import"./MangaGrid-rhDGpJvR.js";import"./useManageMangaLibraryState-BsQKg7Hx.js";import"./Chapters-BQO7Cj43.js";import"./DateHelper-BQJx35Tj.js";import"./Asserts-DqTDQ0qD.js";import"./Mangas-BBFZHpo3.js";import"./ThreeStateCheckboxInput-DxIR9tgV.js";import"./CheckboxInput-Dc79Wi4Q.js";import"./Delete-Dme4SPcJ.js";import"./Download-DPXUoycH.js";import"./ContinueReadingTooltip-SArmT1A0.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-DLZmnKat.js";import"./SpinnerImage-3Ixkj_Zv.js";import"./Refresh-D5fsx4KL.js";import"./Card-DRWdKBfF.js";import"./ListCardContent-Dck7VY3D.js";import"./CheckCircle-OcuBpxtC.js";import"./Metadata-951T2OSL.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-BjuaT9KR.js";import"./Link-nJB0fSg9.js";import"./NumberSetting-DwU6n1-8.js";import"./Slider-DV5OgDSk.js";import"./useMobilePicker-bHHAo6gD.js";import"./Chip-zaGcYvq8.js";import"./SelectSetting-B9GnQ3eB.js";import"./Select-BQKZWRp4.js";import"./Sync-qkLL6JX8.js";import"./use-merged-ref-BItSWjvV.js";import"./ListCardAvatar-D0NGFYOW.js";import"./PlayArrow-DYCVlk68.js";import"./StyledFab-CVZ9Koug.js";import"./index-DOG5W0FP.js";import"./Virtuoso.util-D1vaYJ3x.js";import"./useAppTitle-DKEUgI89.js";import"./useAppAction-BzoKyZgk.js";const kr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,G]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:x}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||G(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&x().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
