import{u as A,aA as C,aq as I,Z as j,r as a,bG as w,b as S,bH as T,j as i,e as b,g as k,f as E}from"./index-06R0nN7p.js";import{E as B}from"./EmptyViewAbsoluteCentered-CO60AXU9.js";import{G as O}from"./GridLayouts-B94FxE6N.js";import{B as P}from"./BaseMangaGrid-VkEdDNHj.js";import{u as R}from"./useAppTitleAndAction-DOmG_1mS.js";import"./Checkbox-BtkGh3kO.js";import"./SwitchBase-KYCGyawl.js";import"./ListPreference-CG-kkhbJ.js";import"./FormGroup-CwSk1jco.js";import"./MangaGrid-E7TX4NBl.js";import"./useManageMangaLibraryState-CIbWhwTw.js";import"./Chapters-DPFziYLd.js";import"./DateHelper-DMV9G70v.js";import"./Asserts-DtiO6A17.js";import"./Mangas-D9F87JaV.js";import"./ThreeStateCheckboxInput-36T1c-V2.js";import"./CheckboxInput-BT6DlfVI.js";import"./Delete-B-mv7Ycm.js";import"./Download-UoNaoFhf.js";import"./ContinueReadingTooltip-DFYc_GJp.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-D9-nv3NH.js";import"./SpinnerImage-BlTKrsPq.js";import"./Refresh-9c-qqoB7.js";import"./Card-BXv64GKN.js";import"./ListCardContent-DOrx9_Iu.js";import"./CheckCircle-CrYkJ1HV.js";import"./Metadata-b1GSTYoD.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-DcbL3ICk.js";import"./Link-B0AtKBcg.js";import"./NumberSetting-Iil-hjP_.js";import"./Slider-DYUqMTkr.js";import"./useMobilePicker-DxTgSTrE.js";import"./Chip-DrQFiaVO.js";import"./SelectSetting-d1umiNz6.js";import"./Select-BuIwDzdT.js";import"./Sync-D0JGG_ta.js";import"./use-merged-ref-DytnVaFJ.js";import"./ListCardAvatar-JiGGIKe5.js";import"./PlayArrow-CQIF6lk1.js";import"./StyledFab-C5YBD3Ar.js";import"./index-C9YDFCB_.js";import"./Virtuoso.util-BxzHcnsK.js";import"./useAppTitle-C-9g9cRu.js";import"./useAppAction-Bl1AJGbO.js";const kr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,G]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:x}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||G(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&x().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
