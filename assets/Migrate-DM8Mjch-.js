import{u as C,at as A,a as I,R as j,r as a,bt as w,e as S,bu as T,j as i,h as R,g as b,i as E}from"./index-Bx6MRHdQ.js";import{E as k}from"./EmptyViewAbsoluteCentered-B-DWlFJ1.js";import{G as B}from"./GridLayouts-BLzet36S.js";import{B as O}from"./BaseMangaGrid-Cs2s8XF7.js";import{u as P}from"./useAppTitleAndAction-BaP7xg9i.js";import"./Checkbox-hwlux6LE.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-2HEkgjKE.js";import"./SwitchBase-CtMxqJdy.js";import"./ListPreference-D3Ctj1yk.js";import"./FormGroup-Dy4GabYM.js";import"./MangaGrid-COSJBXC_.js";import"./useManageMangaLibraryState-BNnenSij.js";import"./ThreeStateCheckboxInput-iKTT0FHu.js";import"./CheckboxInput-CEtQXhi-.js";import"./Delete-C-zLK1Bx.js";import"./Download-DFVkc81g.js";import"./ChaptersDownloadActionMenuItems-BYIEUAy3.js";import"./Trackers-COtG7wmP.js";import"./Card-BoIEROho.js";import"./ListCardContent-BTvSjrjB.js";import"./Avatar-DJR6-gHD.js";import"./TextField-yH__bfkk.js";import"./InputAdornment-CMLAWS9z.js";import"./CheckCircle-C-vCYWa_.js";import"./index-C9bi3pC_.js";import"./CardActionArea-Bf_d1VPh.js";import"./Link-BPjeR1jj.js";import"./NumberSetting-BPGfN3sK.js";import"./Slider-DNeKyxgH.js";import"./useMobilePicker-BFQDULyX.js";import"./Chip-D0FRGXzx.js";import"./SelectSetting-BFvQJzcV.js";import"./Select-B05Hf4wF.js";import"./Sync-f6bmczQj.js";import"./use-merged-ref-0MMexLoZ.js";import"./ListCardAvatar-CHoq0knY.js";import"./PlayArrow-CHXGRnFz.js";import"./StyledFab-Dgsmnxr_.js";import"./Virtuoso.util-Dc79cN-p.js";import"./useAppTitle-DHNZrIEm.js";import"./useAppAction-rdJjcZnZ.js";const jr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(P((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(B,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(R,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(k,{message:d("global.error.label.failed_to_load_data"),messageExtra:b(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(O,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{jr as Migrate};
