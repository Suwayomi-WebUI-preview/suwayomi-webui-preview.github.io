import{u as w,aw as C,am as A,W as I,r as a,bv as j,b as S,bw as T,j as i,e as b,g as k,f as E}from"./index-uuLFyWjH.js";import{E as B}from"./EmptyViewAbsoluteCentered-DhyXdnvR.js";import{G as O}from"./GridLayouts-DU2-bBuI.js";import{B as P}from"./BaseMangaGrid-BxY2gBg-.js";import{u as R}from"./useAppTitleAndAction-Bjz_U7O-.js";import"./Checkbox-rBalqFKJ.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-C_H9sgNp.js";import"./SwitchBase-HR_UypDY.js";import"./ListPreference-DiTlUveF.js";import"./FormGroup-BVSRhZNm.js";import"./MangaGrid-Cw_XosKi.js";import"./useManageMangaLibraryState-BsZvXNpP.js";import"./ThreeStateCheckboxInput-lb99kLib.js";import"./CheckboxInput-CNhfe4XO.js";import"./Delete-CT9ozx7M.js";import"./Download-BoRIdzjV.js";import"./ChaptersDownloadActionMenuItems-CjNYfUkw.js";import"./Trackers-COtG7wmP.js";import"./Card-BMGU0hB5.js";import"./ListCardContent-DmDL0s6p.js";import"./Avatar-D_SX_7JJ.js";import"./TextField-15mDkyKy.js";import"./InputAdornment-BM3DOWOQ.js";import"./CheckCircle-CrrZR-Yh.js";import"./Metadata-eZrCWyjI.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-BVD5k2pE.js";import"./Link-C2kDprXF.js";import"./NumberSetting-BfessCW6.js";import"./Slider-Dz3godMk.js";import"./useMobilePicker-C6HO2B4j.js";import"./Chip-BgYM1O2i.js";import"./SelectSetting-Bfh4iMnt.js";import"./Select-BNss_d9h.js";import"./Sync-CQTulibV.js";import"./use-merged-ref-C0Hj7ark.js";import"./ListCardAvatar-u06x7-od.js";import"./PlayArrow-Dp0rL8Ks.js";import"./StyledFab-DLsISrb6.js";import"./index-CPmTO8DF.js";import"./Virtuoso.util-BLADxBo0.js";import"./useAppTitle-DO-nxHM7.js";import"./useAppAction-CnkPY9XH.js";const Tr=()=>{var h,L;const{t:d}=w(),{sourceId:o}=C(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:j}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
