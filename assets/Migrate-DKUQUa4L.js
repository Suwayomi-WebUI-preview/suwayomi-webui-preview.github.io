import{u as A,aA as C,aq as I,Z as j,r as a,bH as w,b as S,bI as T,j as i,e as b,g as k,f as E}from"./index-BxY--oUh.js";import{E as B}from"./EmptyViewAbsoluteCentered-D6BQtVQo.js";import{G as O}from"./GridLayouts-COUS8CLw.js";import{B as P}from"./BaseMangaGrid-BBSGtHW-.js";import{u as R}from"./useAppTitleAndAction-BMJ_Q_5Q.js";import"./Checkbox-CMj7EKdF.js";import"./SwitchBase-BXymYdFv.js";import"./ListPreference-2cFAAHjq.js";import"./FormGroup-DlKfo-If.js";import"./MangaGrid-CK39-60i.js";import"./useManageMangaLibraryState-DMcTOe1n.js";import"./Chapters-CZPgsnrp.js";import"./DateHelper-t7R6x4uG.js";import"./Asserts-CT4yz8Rx.js";import"./Mangas-BDR4FcW-.js";import"./ThreeStateCheckboxInput-D1XP_srJ.js";import"./CheckboxInput-DErwrXZM.js";import"./Delete-Be7vYmHz.js";import"./Download-7K2REnyI.js";import"./ContinueReadingTooltip-DQUk_Qg1.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-hfgj0li9.js";import"./SpinnerImage-cYfbeNaT.js";import"./Refresh-DHbarCD7.js";import"./Card-VV91nnDB.js";import"./ListCardContent-B7kgvJcO.js";import"./CheckCircle-LIHInv7B.js";import"./Metadata-Ct3MP3h9.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-BnmYSDIk.js";import"./Link-BT0uZnKF.js";import"./NumberSetting-BlMDb8q4.js";import"./Slider-C6nq4xsA.js";import"./useMobilePicker-C0DoWWC4.js";import"./Chip-ClSpYYNu.js";import"./SelectSetting-C13Cn0NW.js";import"./Select-B3uQi_fb.js";import"./Sync-CbxdEouf.js";import"./use-merged-ref-C5D1_heY.js";import"./ListCardAvatar-B8KlnRJH.js";import"./PlayArrow-NUe27zwL.js";import"./StyledFab-uBa6R-Df.js";import"./index-CSVzqkn4.js";import"./Virtuoso.util-BT7BC7P5.js";import"./useAppTitle-DKL-DSkS.js";import"./useAppAction-C1aC_gr_.js";const kr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
