import{u as C,av as A,al as I,V as j,r as a,bu as w,b as S,bv as T,j as i,e as b,g as k,f as E}from"./index-B9UlrkJ4.js";import{E as B}from"./EmptyViewAbsoluteCentered-DPycH2Z7.js";import{G as O}from"./GridLayouts-DF_3mklw.js";import{B as P}from"./BaseMangaGrid-xx8NHLgh.js";import{u as R}from"./useAppTitleAndAction-CV92NnMs.js";import"./Checkbox-ykW9O4I9.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-DPq_bMc3.js";import"./SwitchBase-DpdZ6XWk.js";import"./ListPreference-Befe481d.js";import"./FormGroup-CM83Jtey.js";import"./MangaGrid-41olpO_L.js";import"./useManageMangaLibraryState-CSaSWnnT.js";import"./ThreeStateCheckboxInput-BOftXnsH.js";import"./CheckboxInput-BjIxZMhh.js";import"./Delete-BoYoyPJu.js";import"./Download-DvDTGwHj.js";import"./ChaptersDownloadActionMenuItems-BV0q8DeG.js";import"./Trackers-COtG7wmP.js";import"./Card--ByuDVwt.js";import"./ListCardContent-oBRpZSag.js";import"./Avatar-CDHIHB-v.js";import"./TextField-yx_LXatZ.js";import"./InputAdornment-yZ3SO1Xq.js";import"./CheckCircle-GrUfmzSU.js";import"./Metadata-B1q0hpE3.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-BbP19uyN.js";import"./Link-NFmvxGL4.js";import"./NumberSetting-FnLcslH4.js";import"./Slider-DCR6-2F4.js";import"./useMobilePicker-CPTbmvzc.js";import"./Chip-C74rcJem.js";import"./SelectSetting-CS9ga9fB.js";import"./Select-e_Q9C23b.js";import"./Sync-BDvOpjD7.js";import"./use-merged-ref-5Crp8Efl.js";import"./ListCardAvatar-BC2coAhq.js";import"./PlayArrow-n50VeytS.js";import"./StyledFab-xuK04BcJ.js";import"./index-D2Q3tVCM.js";import"./Virtuoso.util-BLAUtOSk.js";import"./useAppTitle-D8yTcyW3.js";import"./useAppAction-Cz-UwbHr.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
