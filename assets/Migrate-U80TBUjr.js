import{u as C,au as A,a as I,R as j,r as a,bt as w,e as S,bu as T,j as i,h as R,g as b,i as E}from"./index-YZjYIyFe.js";import{E as k}from"./EmptyViewAbsoluteCentered-zNjEKbo-.js";import{G as B}from"./GridLayouts-tA300NaN.js";import{B as O}from"./BaseMangaGrid-DXFV4IHN.js";import{u as P}from"./useAppTitleAndAction-G0RS0HTW.js";import"./Checkbox-Dgmui1oJ.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-BqVkxLns.js";import"./SwitchBase-DRS_qNlg.js";import"./ListPreference-Duu8vmOd.js";import"./FormGroup-DKFzyqKA.js";import"./MangaGrid-qXlijAn6.js";import"./useManageMangaLibraryState-DvURRXnk.js";import"./ThreeStateCheckboxInput-B1MBybCs.js";import"./CheckboxInput-B6G4yK_I.js";import"./Delete-BJF6sdMK.js";import"./Download-jv4FcZMx.js";import"./ChaptersDownloadActionMenuItems-D3E9_2IM.js";import"./Trackers-COtG7wmP.js";import"./Card-BH9uP2SM.js";import"./ListCardContent-D-agXhNa.js";import"./Avatar-C1FbjqiS.js";import"./TextField-pM3hwr-b.js";import"./InputAdornment-Cpy-WVlb.js";import"./CheckCircle-DVMl0n60.js";import"./index-DJkOhQQr.js";import"./CardActionArea-B-tf_p4o.js";import"./Link-CZKKjXYw.js";import"./NumberSetting-9CF0RQdN.js";import"./Slider-DX_O0dnG.js";import"./useMobilePicker-DdWgzUpk.js";import"./Chip-2cwR78yZ.js";import"./SelectSetting-C9igmBxs.js";import"./Select-DiWep6RY.js";import"./Sync-DDbVE8Yf.js";import"./use-merged-ref-3csQ2rRc.js";import"./ListCardAvatar-LcirwZkL.js";import"./PlayArrow-C9B6yfCY.js";import"./StyledFab-DW-bzI9D.js";import"./Virtuoso.util-Ij1dqJJh.js";import"./useAppTitle-2rHSITA6.js";import"./useAppAction-DGTx0eXk.js";const jr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(P((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(B,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(R,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(k,{message:d("global.error.label.failed_to_load_data"),messageExtra:b(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(O,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{jr as Migrate};
