import{u as C,aF as I,av as A,X as j,r as a,bI as w,b as S,bJ as T,j as i,e as b,g as k,f as E}from"./index-DBfGTIZV.js";import{E as B}from"./EmptyViewAbsoluteCentered-rOGaD3Mh.js";import{G as O}from"./GridLayouts-DTSZDH00.js";import{B as P}from"./BaseMangaGrid-B5W5LsU6.js";import{u as R}from"./useAppTitleAndAction-_GMnkIZJ.js";import"./Checkbox-DPF2Xe2W.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-x0-kuXF8.js";import"./SwitchBase-COUmJuqQ.js";import"./ListPreference-BnXJQMU5.js";import"./FormGroup-DtvM34RA.js";import"./MangaGrid-B3VwH__w.js";import"./useManageMangaLibraryState-BAeYi2GH.js";import"./ThreeStateCheckboxInput-Bfmext5B.js";import"./CheckboxInput-CQ2V102E.js";import"./Delete-CIHTCGs1.js";import"./Download-CdMbK2ad.js";import"./ChaptersDownloadActionMenuItems-CgiyTZ14.js";import"./Trackers-Bgo8y--2.js";import"./Card-GGkhWCKJ.js";import"./ListCardContent-3xEQSJ4a.js";import"./Avatar-DtFp055T.js";import"./VisibilityOff-CXVB4tti.js";import"./TextField-BKPRISVG.js";import"./InputAdornment-CHRkIqTN.js";import"./CheckCircle-DzBy5Xuj.js";import"./Metadata-f8XN555T.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-D_OA_ZiX.js";import"./Link-WUfUGNxg.js";import"./NumberSetting-BMQgiYlO.js";import"./Slider-BYDoJ7rM.js";import"./useMobilePicker-v0jW4KrL.js";import"./Chip-Dp5a0sT2.js";import"./SelectSetting-BPOvpY_p.js";import"./Select-DUjVGkTA.js";import"./Sync-DdQTOkzm.js";import"./use-merged-ref-DM0dJN08.js";import"./ListCardAvatar-CIpM7-8W.js";import"./PlayArrow-CNl4SnuT.js";import"./StyledFab-B2vBDuJo.js";import"./index--bz9Eswp.js";import"./Virtuoso.util-Bsjxxssr.js";import"./useAppTitle-DJFXX9Js.js";import"./useAppAction-Cx4DojZY.js";const br=()=>{var h,L;const{t:d}=C(),{sourceId:o}=I(),[s,y]=A("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{br as Migrate};
