import{u as C,av as A,al as I,V as j,r as a,bu as w,b as S,bv as T,j as i,e as b,g as k,f as E}from"./index-C31zer8j.js";import{E as B}from"./EmptyViewAbsoluteCentered-GJB1YAkB.js";import{G as O}from"./GridLayouts-Baje1tGC.js";import{B as P}from"./BaseMangaGrid-C_qfRWw7.js";import{u as R}from"./useAppTitleAndAction-E-3hGawd.js";import"./Checkbox-R2Aewz3n.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-SfVaomJZ.js";import"./SwitchBase-DOAKgWJr.js";import"./ListPreference-ClXL_u1z.js";import"./FormGroup-C5SZ5CUW.js";import"./MangaGrid-DCAKECg0.js";import"./useManageMangaLibraryState-BnDTZlWR.js";import"./ThreeStateCheckboxInput-lukj5NF8.js";import"./CheckboxInput-C0qFJYTZ.js";import"./Delete-2CZcT_te.js";import"./Download-C8M8rv20.js";import"./ChaptersDownloadActionMenuItems-CoBfR6JT.js";import"./Trackers-COtG7wmP.js";import"./Card-BenBk-DW.js";import"./ListCardContent-BkPEg8Vm.js";import"./Avatar-DF1srDNg.js";import"./TextField-BI-vG49K.js";import"./InputAdornment-4AKwMGih.js";import"./CheckCircle-BIAvZQxt.js";import"./Metadata-KvC151zR.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-BPlyyjeT.js";import"./Link-C1L2Jtr6.js";import"./NumberSetting-BJZZHNrZ.js";import"./Slider-B_e-r2sj.js";import"./useMobilePicker-Bex4HDDn.js";import"./Chip-ChoRcp3a.js";import"./SelectSetting-Y2NgFCfp.js";import"./Select-vDjyzd5F.js";import"./Sync-BsWC_IsF.js";import"./use-merged-ref-UB_jC9JN.js";import"./ListCardAvatar-CTajoT6n.js";import"./PlayArrow-DnrLN0ks.js";import"./StyledFab-B-eCrie0.js";import"./index-CDwXGP0c.js";import"./Virtuoso.util-B0Rk8p_I.js";import"./useAppTitle-C_unTVVZ.js";import"./useAppAction-D7Ig7-31.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
