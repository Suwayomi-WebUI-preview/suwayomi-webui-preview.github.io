import{u as C,av as w,al as A,V as I,r as a,bv as j,b as S,bw as T,j as i,e as b,g as k,f as E}from"./index-zNRCc0xl.js";import{E as B}from"./EmptyViewAbsoluteCentered-DJ7_Wkqy.js";import{G as O}from"./GridLayouts-Dch0IXHG.js";import{B as P}from"./BaseMangaGrid-DKAcOrpv.js";import{u as R}from"./useAppTitleAndAction-B3Bw143F.js";import"./Checkbox-VfDE7o2W.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-DIx_WD_z.js";import"./SwitchBase-D2UiMFY_.js";import"./ListPreference-5aLj12fe.js";import"./FormGroup-N8qz-jHH.js";import"./MangaGrid-JeSIG4ny.js";import"./useManageMangaLibraryState-s517Xhay.js";import"./ThreeStateCheckboxInput-DNjUZniP.js";import"./CheckboxInput-Ba8hOwz-.js";import"./Delete-CYlPcPJY.js";import"./Download-BvKRsJtp.js";import"./ChaptersDownloadActionMenuItems-BTXei6dP.js";import"./Trackers-COtG7wmP.js";import"./Card-CFCtZ_A-.js";import"./ListCardContent-BkkqqaDH.js";import"./Avatar-BaHwAQTM.js";import"./TextField-BxeZv6lv.js";import"./InputAdornment-Bo8P-nKT.js";import"./CheckCircle-LoxbX8Mr.js";import"./Metadata-DjWjlZ6J.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-DJvxKEv6.js";import"./Link-CO_IkJ-0.js";import"./NumberSetting-DXUrsUUA.js";import"./Slider-epIRD2fq.js";import"./useMobilePicker-B2sbC3t_.js";import"./Chip-CrTOErjI.js";import"./SelectSetting-CeyMXxLt.js";import"./Select-C5dRg0hj.js";import"./Sync-_VkCcDZa.js";import"./use-merged-ref-DbEjnfoO.js";import"./ListCardAvatar-B-K6yKup.js";import"./PlayArrow-CKBjqbX5.js";import"./StyledFab-3dMNJ_GR.js";import"./index-BchxF0G_.js";import"./Virtuoso.util-DWCLK1yX.js";import"./useAppTitle-J75y9BxW.js";import"./useAppAction-r7n17ptw.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=w(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:j}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
