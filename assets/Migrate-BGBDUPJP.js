import{u as C,aF as I,av as A,X as j,r as a,bI as w,b as S,bJ as T,j as i,e as b,g as k,f as E}from"./index-CEWF6zql.js";import{E as B}from"./EmptyViewAbsoluteCentered-BLuK85YD.js";import{G as O}from"./GridLayouts-BwtVZOco.js";import{B as P}from"./BaseMangaGrid-fymrmp-s.js";import{u as R}from"./useAppTitleAndAction-TxV-GKah.js";import"./Checkbox-C2nDt0Ah.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-2vrH9l7F.js";import"./SwitchBase-Cwek8f_d.js";import"./ListPreference-rgDKAbJO.js";import"./FormGroup-oGDb8Oxv.js";import"./MangaGrid-YufoWn6L.js";import"./useManageMangaLibraryState-C4-iZQUY.js";import"./ThreeStateCheckboxInput-CpEjOT3V.js";import"./CheckboxInput-C1GOyMZA.js";import"./Delete-BM9r9ku7.js";import"./Download-ByrgbsFP.js";import"./ChaptersDownloadActionMenuItems-C5Z6dfU3.js";import"./Trackers-Bgo8y--2.js";import"./Card-DTn90941.js";import"./ListCardContent-DcBFawv2.js";import"./Avatar-_zoHVYeX.js";import"./VisibilityOff-C1_ZoGM5.js";import"./TextField-DRKqiFHq.js";import"./InputAdornment-D0YLIndN.js";import"./CheckCircle-B-hFe91T.js";import"./Metadata-CzNA5SFs.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-B592v6EP.js";import"./Link-DJQKGx7A.js";import"./NumberSetting-Cs2JiOx5.js";import"./Slider-CgYgCkND.js";import"./useMobilePicker-BiZavtPH.js";import"./Chip-BjQ4kX6k.js";import"./SelectSetting-iuJTQBP1.js";import"./Select-CRjAvzyt.js";import"./Sync-Dt0_XnRt.js";import"./use-merged-ref-B5Gg5kk1.js";import"./ListCardAvatar-ClPBkOoH.js";import"./PlayArrow-BNmem_hr.js";import"./StyledFab-VgFqhzW8.js";import"./index-o5NbeoIS.js";import"./Virtuoso.util-DMSfP-Ll.js";import"./useAppTitle-ikkvVLro.js";import"./useAppAction-BcTO6V2D.js";const br=()=>{var h,L;const{t:d}=C(),{sourceId:o}=I(),[s,y]=A("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{br as Migrate};
