import{u as C,at as j,aj as A,V as I,r as a,bs as w,b as S,bt as T,j as i,e as b,g as k,f as E}from"./index-DAymAOkx.js";import{E as B}from"./EmptyViewAbsoluteCentered-DyISi1Z_.js";import{G as O}from"./GridLayouts-C-TUzXEA.js";import{B as P}from"./BaseMangaGrid-C_uCMJ3p.js";import{u as R}from"./useAppTitleAndAction-DBe3dJDP.js";import"./Checkbox-v3o8CvOq.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-DCdL60gd.js";import"./SwitchBase-HL2_-2JL.js";import"./ListPreference-C7BTfTqt.js";import"./FormGroup-Bldhzjln.js";import"./MangaGrid-KkYLj5uT.js";import"./useManageMangaLibraryState-CV5dUyaq.js";import"./ThreeStateCheckboxInput-CjCOBDu3.js";import"./CheckboxInput-D9Ohj1dy.js";import"./Delete-DXabme3H.js";import"./Download-Cac8Cj13.js";import"./ChaptersDownloadActionMenuItems-CpUglToF.js";import"./Trackers-COtG7wmP.js";import"./Card-dwVnZO-h.js";import"./ListCardContent-DS0Tm_8x.js";import"./Avatar-BGg10Fjs.js";import"./TextField-CBJl40oh.js";import"./InputAdornment-BAYKHLCr.js";import"./CheckCircle-BCFI20hm.js";import"./Metadata-DW7RAPeV.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-DkRZcjz3.js";import"./Link-BDP9hauS.js";import"./NumberSetting-C--EqlZ8.js";import"./Slider-BrdtYPz1.js";import"./useMobilePicker-XJytDVQP.js";import"./Chip-CGcOUavb.js";import"./SelectSetting-DNjsUQiT.js";import"./Select-DBGlJOoE.js";import"./Sync-C0yxfW4r.js";import"./use-merged-ref-C5USLP9o.js";import"./ListCardAvatar-Df6Jjhge.js";import"./PlayArrow-A0rjd8pJ.js";import"./StyledFab-DQqoLXTK.js";import"./index-C2DPV0_U.js";import"./Virtuoso.util-vJzK5gQb.js";import"./useAppTitle-CQ-6iXir.js";import"./useAppAction-i5cCiZGD.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=j(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
