import{u as A,at as C,aj as j,W as I,r as a,bz as w,b as S,bA as T,j as i,e as b,g as k,f as E}from"./index-CYZVQ6cl.js";import{E as B}from"./EmptyViewAbsoluteCentered-Cmswn6eg.js";import{G as O}from"./GridLayouts-CQXcBpF-.js";import{B as P}from"./BaseMangaGrid-CNkbriQf.js";import{u as R}from"./useAppTitleAndAction-DP06z3_J.js";import"./Checkbox-WicmnLip.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-Jm3LgFyP.js";import"./SwitchBase-BSvOGXEb.js";import"./ListPreference-Dx9oei31.js";import"./FormGroup-BNX2X4C_.js";import"./MangaGrid-BZNDbBsq.js";import"./useManageMangaLibraryState-LLHozqG2.js";import"./ThreeStateCheckboxInput-C-bn6zY2.js";import"./CheckboxInput-DkD4O_2m.js";import"./Delete-D61gWGfC.js";import"./Download-C4qw3XIn.js";import"./ChaptersDownloadActionMenuItems-j3a1CLvH.js";import"./Trackers-COtG7wmP.js";import"./Card-Bdtf0Ftp.js";import"./ListCardContent--uacizpw.js";import"./Avatar-Xn3FsivW.js";import"./TextField-CQU-KdOY.js";import"./InputAdornment-9DB5y7K2.js";import"./CheckCircle-6gAiglUL.js";import"./Metadata-CkEZ3Ht2.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-Bfyi9hKV.js";import"./Link-mVsTQdRu.js";import"./NumberSetting-Nw9wUZaJ.js";import"./Slider-CBPFcDQV.js";import"./useMobilePicker-DDsa6_I2.js";import"./Chip-kAhltYLZ.js";import"./SelectSetting-VOi_ypiU.js";import"./Select-J52CxlWP.js";import"./Sync-DseWXj-R.js";import"./use-merged-ref-CqoMoVzh.js";import"./ListCardAvatar-Cb5ePE2u.js";import"./PlayArrow-DhBlqG8n.js";import"./StyledFab-DDYPLJ3Z.js";import"./index-vEGNJ1E1.js";import"./Virtuoso.util-DFlz5mKH.js";import"./useAppTitle-CXoGR728.js";import"./useAppAction-B9NlHCxQ.js";const Tr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=j("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
