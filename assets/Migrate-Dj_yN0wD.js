import{u as C,at as j,aj as A,W as I,r as a,bs as w,b as S,bt as T,j as i,e as b,g as k,f as E}from"./index-D0Dc2eKf.js";import{E as B}from"./EmptyViewAbsoluteCentered-BwFEOLlC.js";import{G as O}from"./GridLayouts-CfNwOHGM.js";import{B as P}from"./BaseMangaGrid-BNwApTp0.js";import{u as R}from"./useAppTitleAndAction-DbDaVqYB.js";import"./Checkbox-CyWgLlsL.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-rXPK9Fse.js";import"./SwitchBase-D0l7rDYX.js";import"./ListPreference-D3ctng04.js";import"./FormGroup-Ys6QaqU1.js";import"./MangaGrid-CBiKxpCM.js";import"./useManageMangaLibraryState-B3VF0NFR.js";import"./ThreeStateCheckboxInput-Bck7n9y6.js";import"./CheckboxInput-BqLMoqob.js";import"./Delete-C5B5qMMO.js";import"./Download-B_2nQzrw.js";import"./ChaptersDownloadActionMenuItems-BFBPtY7P.js";import"./Trackers-COtG7wmP.js";import"./Card-BrQECkDg.js";import"./ListCardContent-CIHcEJ2q.js";import"./Avatar-B_Dzv6Eb.js";import"./TextField-CFpSpcy0.js";import"./InputAdornment-BaH50U65.js";import"./CheckCircle-CdvyR5Mn.js";import"./Metadata-t3Nfj77d.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-ZTlqHET4.js";import"./Link-DJy8Trvh.js";import"./NumberSetting-BmCJo_i9.js";import"./Slider-eXWJVmpg.js";import"./useMobilePicker-C5dRu13X.js";import"./Chip-KBXX8ww6.js";import"./SelectSetting-ATMRSSEf.js";import"./Select-DyuPjmql.js";import"./Sync-Cep6kMfi.js";import"./use-merged-ref-C6S4kXN3.js";import"./ListCardAvatar-B9JrixZI.js";import"./PlayArrow-CN27pTj7.js";import"./StyledFab-D6TzBJXS.js";import"./index-hH70X0Mb.js";import"./Virtuoso.util-Brel39sG.js";import"./useAppTitle-Z9HBFjvk.js";import"./useAppAction-Bh6vlh2N.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=j(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
