import{u as A,aA as C,aq as I,Z as j,r as a,bG as w,b as S,bH as T,j as i,e as b,g as k,f as E}from"./index-DPdc1Y9-.js";import{E as B}from"./EmptyViewAbsoluteCentered-DBm3rd7N.js";import{G as O}from"./GridLayouts--Ce1v73O.js";import{B as P}from"./BaseMangaGrid-CuN0M9Jg.js";import{u as R}from"./useAppTitleAndAction-aJz5_-yy.js";import"./Checkbox-B_4VVY8E.js";import"./SwitchBase-CO1TfyMX.js";import"./ListPreference-C9VgiOpI.js";import"./FormGroup-BCad1Z3w.js";import"./MangaGrid-BMcVREpB.js";import"./useManageMangaLibraryState-DSb6uV9X.js";import"./Chapters-XzXrU7Ee.js";import"./DateHelper-BigGzh7T.js";import"./Asserts-CeSlkuaQ.js";import"./Mangas-dYzW-Wgd.js";import"./ThreeStateCheckboxInput-CT7aprfp.js";import"./CheckboxInput-D-9HLOBO.js";import"./Delete-Q9HzD_rR.js";import"./Download-BbFCzTal.js";import"./ContinueReadingTooltip-B-rKXT3s.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-CLMVGnIv.js";import"./SpinnerImage-CAYajAZT.js";import"./Refresh-75JGpYlJ.js";import"./Card-BRVJtqq9.js";import"./ListCardContent-CGISRpOG.js";import"./CheckCircle-BhUguU8g.js";import"./Metadata-DRgUC2Kd.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-D_82qWcd.js";import"./Link-DBdF5juq.js";import"./NumberSetting-RQ2HgRvN.js";import"./Slider-BLlm_eSA.js";import"./useMobilePicker-Au7Yw9IS.js";import"./Chip-DC_cSgjO.js";import"./SelectSetting-D8hSDcaz.js";import"./Select-D5Jbt1LK.js";import"./Sync-BhIsWkrc.js";import"./use-merged-ref-DfZSSF6w.js";import"./ListCardAvatar-RwQDLpzK.js";import"./PlayArrow-CLOrB57r.js";import"./StyledFab-CEOYe09J.js";import"./index-C9ZR08Un.js";import"./Virtuoso.util-BEEgo0iE.js";import"./useAppTitle-DI83nGaZ.js";import"./useAppAction-BhORKVGp.js";const kr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,G]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:x}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||G(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&x().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
