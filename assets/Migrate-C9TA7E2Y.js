import{u as C,at as j,aj as A,V as I,r as a,bs as w,b as S,bt as T,j as i,e as b,g as k,f as E}from"./index-CVkligGD.js";import{E as B}from"./EmptyViewAbsoluteCentered-Dmac8Glu.js";import{G as O}from"./GridLayouts-CQjMk-wg.js";import{B as P}from"./BaseMangaGrid-Cy24dgaT.js";import{u as R}from"./useAppTitleAndAction-BWNcHwHY.js";import"./Checkbox-x7Zh5e1R.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-C9H9YnTK.js";import"./SwitchBase-CiA_V00d.js";import"./ListPreference-Dnm_2pEr.js";import"./FormGroup-aAeVVTiX.js";import"./MangaGrid-CAqiDFQJ.js";import"./useManageMangaLibraryState-DJKL1M-s.js";import"./ThreeStateCheckboxInput-Cx25pWI5.js";import"./CheckboxInput-aEOCsT_e.js";import"./Delete-CKZjhVGH.js";import"./Download-D04X_dW-.js";import"./ChaptersDownloadActionMenuItems-M-xZL5hV.js";import"./Trackers-COtG7wmP.js";import"./Card-DeRFKMbU.js";import"./ListCardContent-s0hsM-IO.js";import"./Avatar-Bvy_SNft.js";import"./TextField-DPCnzUyQ.js";import"./InputAdornment-DfP9-_gH.js";import"./CheckCircle-CaBggu9O.js";import"./Metadata-Cm1tmjsa.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-Df8_Wjjd.js";import"./Link-DSYsaY6O.js";import"./NumberSetting-B6jd5ce6.js";import"./Slider-Cuj6bkTk.js";import"./useMobilePicker-CvHXWap1.js";import"./Chip-DestDTYJ.js";import"./SelectSetting-CW1TrA-q.js";import"./Select-cDGs7MYG.js";import"./Sync-DgnefjD-.js";import"./use-merged-ref-DhXqSjTp.js";import"./ListCardAvatar-B7AlrycU.js";import"./PlayArrow-4OTcyvMS.js";import"./StyledFab-cLr3VBse.js";import"./index-BGtr8Kgs.js";import"./Virtuoso.util-BmfME52S.js";import"./useAppTitle-xRf9RP4z.js";import"./useAppAction-CPoAx7QB.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=j(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
