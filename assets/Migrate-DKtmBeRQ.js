import{u as C,at as A,a as I,R as j,r as a,bt as w,e as S,bu as T,j as i,h as R,g as b,i as E}from"./index-N2KlV0av.js";import{E as k}from"./EmptyViewAbsoluteCentered-C-ieOCBn.js";import{G as B}from"./GridLayouts-i3OTYcr_.js";import{B as O}from"./BaseMangaGrid-lkPTnPOe.js";import{u as P}from"./useAppTitleAndAction-Qhrh_BkB.js";import"./Checkbox-DYjBAZGb.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-Duzwmpsm.js";import"./SwitchBase-UsGD7FS6.js";import"./ListPreference-DDue1aKx.js";import"./FormGroup-DT_NyV1j.js";import"./MangaGrid-Fnd2c4C-.js";import"./useManageMangaLibraryState-Di9m2aVX.js";import"./ThreeStateCheckboxInput-DKpappyc.js";import"./CheckboxInput-CONW3GzG.js";import"./Delete-D1V5RDTd.js";import"./Download-DDYAj0A0.js";import"./ChaptersDownloadActionMenuItems-tuKcoALG.js";import"./Trackers-D4pSmk7a.js";import"./Card-ClSl2UAy.js";import"./ListCardContent-CoynPlVh.js";import"./Avatar-C3J2UaiB.js";import"./TextField-CTksBse0.js";import"./InputAdornment-Cv5HSwPc.js";import"./CheckCircle-D5F9cyCZ.js";import"./index-vvcQFnCy.js";import"./CardActionArea-DNWiv-Nz.js";import"./Link-D22D_gCx.js";import"./NumberSetting-6185Izzy.js";import"./Slider-C6GgYjGn.js";import"./useMobilePicker-C-osmVmg.js";import"./Chip-D7nNR2Nq.js";import"./SelectSetting-BbYpK0sr.js";import"./Select-D8q08aMn.js";import"./Sync-Dr_-rxOu.js";import"./use-merged-ref-DQQPRP4g.js";import"./ListCardAvatar-DpP0EdrR.js";import"./PlayArrow-DiLfKCRZ.js";import"./StyledFab-B6oU9v4L.js";import"./Virtuoso.util-yZ1KuQeE.js";import"./useAppTitle-ZPuGx_MD.js";import"./useAppAction-V9q1xf-c.js";const jr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(P((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(B,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(R,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(k,{message:d("global.error.label.failed_to_load_data"),messageExtra:b(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(O,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{jr as Migrate};
