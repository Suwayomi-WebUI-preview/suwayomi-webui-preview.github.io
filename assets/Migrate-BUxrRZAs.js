import{u as A,at as C,aj as j,W as I,r as a,bz as w,b as S,bA as T,j as i,e as b,g as k,f as E}from"./index-CPeTXJh6.js";import{E as B}from"./EmptyViewAbsoluteCentered-C0zy76AZ.js";import{G as O}from"./GridLayouts-DqQg9yKC.js";import{B as P}from"./BaseMangaGrid-x4isYZ6P.js";import{u as R}from"./useAppTitleAndAction-BiTpZcEB.js";import"./Checkbox-DatnGaTI.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-CPzMRNSp.js";import"./SwitchBase-Z17wUCaO.js";import"./ListPreference-Dk9gyUr6.js";import"./FormGroup-DdQpvpYM.js";import"./MangaGrid-CUxpQtGS.js";import"./useManageMangaLibraryState-D0UvVvzw.js";import"./ThreeStateCheckboxInput-NS60IqwU.js";import"./CheckboxInput-CpntG24i.js";import"./Delete-B4SM8zov.js";import"./Download-Y8IzSAF5.js";import"./ChaptersDownloadActionMenuItems-qmO8LGt_.js";import"./Trackers-COtG7wmP.js";import"./Card-BSHy-jG9.js";import"./ListCardContent-0izJWE9h.js";import"./Avatar-BFSpEj7m.js";import"./TextField-DmqrC1lA.js";import"./InputAdornment-nw8HS46B.js";import"./CheckCircle-DCIC7z3w.js";import"./Metadata-CzoXRxE0.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-2P6bstp_.js";import"./Link-XitKuNji.js";import"./NumberSetting-Bk2Cy7n9.js";import"./Slider-CTmIFjNp.js";import"./useMobilePicker-DfWTdG-a.js";import"./Chip-CrxqMkSx.js";import"./SelectSetting-BWYKx536.js";import"./Select-B38dRF2T.js";import"./Sync-CSpDouZX.js";import"./use-merged-ref-CCn0Q7hV.js";import"./ListCardAvatar-BqxKyAwS.js";import"./PlayArrow-BOgDqTJB.js";import"./StyledFab-DJ5RF_4w.js";import"./index-IrUdv4oQ.js";import"./Virtuoso.util-RcQRoSHS.js";import"./useAppTitle-BS2T-YKX.js";import"./useAppAction-9ORT6Ah9.js";const Tr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=j("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
