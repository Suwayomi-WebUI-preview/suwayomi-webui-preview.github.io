import{u as C,az as A,aq as I,Z as j,r as a,bG as w,b as S,bH as T,j as i,e as b,g as k,f as E}from"./index-DpwGAhcA.js";import{E as B}from"./EmptyViewAbsoluteCentered-PIBApOiE.js";import{G as O}from"./GridLayouts-gDAw5tD1.js";import{B as P}from"./BaseMangaGrid-CX296DxE.js";import{u as R}from"./useAppTitleAndAction-DHxzuL05.js";import"./Checkbox-DO-bfoIy.js";import"./SwitchBase-C0VR5mkz.js";import"./ListPreference-CgWI3oRH.js";import"./FormGroup-B_FmTPMG.js";import"./MangaGrid-IzZcpmkX.js";import"./useManageMangaLibraryState-Da1yEHqr.js";import"./Chapters-D_b_SJ_z.js";import"./DateHelper-DZ8Bgqrl.js";import"./Asserts-BonSZxii.js";import"./Mangas-CCr39lg-.js";import"./ThreeStateCheckboxInput-gb9-BC-l.js";import"./CheckboxInput-D4So2BEH.js";import"./Delete-1ZtvRPNG.js";import"./Download-CtfQgtwS.js";import"./ContinueReadingTooltip-DiebUcee.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-GYX7bdxV.js";import"./SpinnerImage-D9YQyZcA.js";import"./Refresh-CIYm-Ntc.js";import"./Card-BE8N4vl7.js";import"./ListCardContent-D-tRLCQa.js";import"./CheckCircle-B-5RRMko.js";import"./Metadata-DA6HrlrI.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-CuZE7WDL.js";import"./Link-ZYE439BR.js";import"./NumberSetting-DD04Lczt.js";import"./Slider-Bxz6NZad.js";import"./useMobilePicker-BUHW2mXV.js";import"./Chip-B5i1AIXP.js";import"./SelectSetting-BZiP6G6q.js";import"./Select-GMEHalhm.js";import"./Sync-BKRjAju4.js";import"./use-merged-ref-Dy0dOIYB.js";import"./ListCardAvatar-Brzj-FKn.js";import"./PlayArrow-ouheYsoD.js";import"./StyledFab-C5-ApGw8.js";import"./index-3YhhK-A8.js";import"./Virtuoso.util-CsGP9E6k.js";import"./useAppTitle-DD0N-9ns.js";import"./useAppAction-D_BmF7hr.js";const kr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,G]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:x}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||G(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&x().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
