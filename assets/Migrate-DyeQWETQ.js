import{u as w,aw as C,am as A,W as I,r as a,bv as j,b as S,bw as T,j as i,e as b,g as k,f as E}from"./index-Cnc2AimA.js";import{E as B}from"./EmptyViewAbsoluteCentered-CgNjsY59.js";import{G as O}from"./GridLayouts-Dx81zp2u.js";import{B as P}from"./BaseMangaGrid-kcrhVEzN.js";import{u as R}from"./useAppTitleAndAction-DQUB_kpl.js";import"./Checkbox-BJmlDHr6.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-BNPUnB57.js";import"./SwitchBase-oNU0MvRF.js";import"./ListPreference-cvZPDZ7p.js";import"./FormGroup-BXcseLLh.js";import"./MangaGrid-CsmWmzoP.js";import"./useManageMangaLibraryState-DKBAtKiX.js";import"./ThreeStateCheckboxInput-BbKb5n-0.js";import"./CheckboxInput-DL-dErsC.js";import"./Delete-pfJ_3Ox2.js";import"./Download-0z4tB5y0.js";import"./ChaptersDownloadActionMenuItems-BrToXdzf.js";import"./Trackers-COtG7wmP.js";import"./Card-DXX3ofTI.js";import"./ListCardContent-CcuRw9p5.js";import"./Avatar-MK1vwfVt.js";import"./TextField-BJlstGuB.js";import"./InputAdornment-D2uApaan.js";import"./CheckCircle-Mpti7-HW.js";import"./Metadata-BKJCZxWD.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-D1yNbRql.js";import"./Link-uv7zHLIF.js";import"./NumberSetting-ClKJsk_x.js";import"./Slider-D3-lF8I-.js";import"./useMobilePicker-Ctz0hqh0.js";import"./Chip-CskgS5zf.js";import"./SelectSetting-BObw82cb.js";import"./Select-BksXA9rL.js";import"./Sync-t3ZRvnrp.js";import"./use-merged-ref-Z8UWRKXi.js";import"./ListCardAvatar-DbSpZz-l.js";import"./PlayArrow-DTyqg2te.js";import"./StyledFab-CfiZ7yXZ.js";import"./index-D3-vBQSk.js";import"./Virtuoso.util-DbWxXgWw.js";import"./useAppTitle-CfrA6NGo.js";import"./useAppAction-t11rY5CL.js";const Tr=()=>{var h,L;const{t:d}=w(),{sourceId:o}=C(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:j}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
