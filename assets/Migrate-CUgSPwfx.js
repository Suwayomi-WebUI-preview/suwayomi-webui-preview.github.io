import{u as C,au as A,a as I,R as j,r as a,bt as w,e as S,bu as T,j as i,h as R,g as b,i as E}from"./index-jpRqaJdL.js";import{E as k}from"./EmptyViewAbsoluteCentered-C-7sbkK6.js";import{G as B}from"./GridLayouts-dr2m-97T.js";import{B as O}from"./BaseMangaGrid-C0AwpSuX.js";import{u as P}from"./useAppTitleAndAction-D-Xp6oPI.js";import"./Checkbox-GRJhWekL.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-sU0b3O3b.js";import"./SwitchBase-DkVks5Ks.js";import"./ListPreference-DOTgCPjQ.js";import"./FormGroup-C7o60W_A.js";import"./MangaGrid-DBba8Fn2.js";import"./useManageMangaLibraryState-DfFRBk_K.js";import"./ThreeStateCheckboxInput-CpN9YVFB.js";import"./CheckboxInput-Dj1I4yu9.js";import"./Delete-CIlY3Ijo.js";import"./Download-lgveXpET.js";import"./ChaptersDownloadActionMenuItems-BYGeQIGz.js";import"./Trackers-COtG7wmP.js";import"./Card-C45OZXtx.js";import"./ListCardContent-BrdW3xcj.js";import"./Avatar-upS8hVPj.js";import"./TextField-CNy3WpG7.js";import"./InputAdornment-CRZ913uN.js";import"./CheckCircle-DBwO1KtS.js";import"./index-DHze8ium.js";import"./CardActionArea-d2BkuZJ9.js";import"./Link-B6bjEzKf.js";import"./NumberSetting-C25m618W.js";import"./Slider-CKl5C-Dq.js";import"./useMobilePicker-Cxptup1f.js";import"./Chip-DwiARDve.js";import"./SelectSetting-BzcG1Uv_.js";import"./Select-BmqWUUyG.js";import"./Sync-B9wC0K5J.js";import"./use-merged-ref-CgNQndhF.js";import"./ListCardAvatar-3QxNEozj.js";import"./PlayArrow-B5XYabMV.js";import"./StyledFab-CxdPyFs5.js";import"./Virtuoso.util-B2UVSzsy.js";import"./useAppTitle-CQKoRnyJ.js";import"./useAppAction-BEA8zopP.js";const jr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=A(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(P((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(B,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(R,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(k,{message:d("global.error.label.failed_to_load_data"),messageExtra:b(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(O,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{jr as Migrate};
