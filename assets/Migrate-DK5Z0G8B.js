import{u as C,at as j,aj as A,V as I,r as a,bs as w,b as S,bt as T,j as i,e as b,g as k,f as E}from"./index-gafTBFZT.js";import{E as B}from"./EmptyViewAbsoluteCentered-CvE-R_GW.js";import{G as O}from"./GridLayouts-DmAupySk.js";import{B as P}from"./BaseMangaGrid-DlwpiVm-.js";import{u as R}from"./useAppTitleAndAction-BaZSaMQ4.js";import"./Checkbox-D_4xbzUF.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-TtOG3-00.js";import"./SwitchBase-Br6YjH8f.js";import"./ListPreference-DcsCdPS5.js";import"./FormGroup-DRqNz0VH.js";import"./MangaGrid-B591VvDp.js";import"./useManageMangaLibraryState-BGSv7eDD.js";import"./ThreeStateCheckboxInput-pkR6wMgV.js";import"./CheckboxInput-CD_WlyGm.js";import"./Delete-BEKGxRjZ.js";import"./Download-DrhLK7kJ.js";import"./ChaptersDownloadActionMenuItems-BPo2BcnF.js";import"./Trackers-COtG7wmP.js";import"./Card-BbdyaTwM.js";import"./ListCardContent-DfHLt-IH.js";import"./Avatar-DGaOdS9z.js";import"./TextField-CPbEoHsy.js";import"./InputAdornment-D00pHji9.js";import"./CheckCircle-CAUFgYkZ.js";import"./Metadata-DNlxzuRf.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-5PDZIBDt.js";import"./Link-yNLL2nza.js";import"./NumberSetting-C5T5pGnp.js";import"./Slider-CAov3hG7.js";import"./useMobilePicker-CMUpNAmp.js";import"./Chip-Bm53m5kX.js";import"./SelectSetting-CPKNsFj_.js";import"./Select-BCWUHuGY.js";import"./Sync-dm0j459X.js";import"./use-merged-ref-C3e8WZ4P.js";import"./ListCardAvatar-CinoQ_zW.js";import"./PlayArrow-DvhSpXM-.js";import"./StyledFab-mx_2XJE1.js";import"./index-M5sJqsaF.js";import"./Virtuoso.util-BR8GDLeT.js";import"./useAppTitle-J5NUdkCY.js";import"./useAppAction-BUcB0wAn.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=j(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
