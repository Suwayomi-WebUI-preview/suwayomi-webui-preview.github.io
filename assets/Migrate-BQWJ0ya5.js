import{u as A,aA as C,aq as I,Z as j,r as a,bH as w,b as S,bI as T,j as i,e as b,g as k,f as E}from"./index-BaJ3TZfy.js";import{E as B}from"./EmptyViewAbsoluteCentered-DOWmjLF8.js";import{G as O}from"./GridLayouts-CqA_AqZY.js";import{B as P}from"./BaseMangaGrid-CdQ8OuRt.js";import{u as R}from"./useAppTitleAndAction-DB6225PI.js";import"./Checkbox-BkUNYhvP.js";import"./SwitchBase-Bivgg48C.js";import"./ListPreference-Cwq2Ugzj.js";import"./FormGroup-CLnpizbz.js";import"./MangaGrid-BxtuCjjn.js";import"./useManageMangaLibraryState-oVm4sovV.js";import"./Chapters-D2DBFFpr.js";import"./DateHelper-CfX69SSs.js";import"./Asserts-B0-i6sll.js";import"./Mangas-BKtpmsN7.js";import"./ThreeStateCheckboxInput-cwg6xhzU.js";import"./CheckboxInput-o14X05oY.js";import"./Delete-B0RpQZNr.js";import"./Download-Roz0PxaM.js";import"./ContinueReadingTooltip-Cv4mckU6.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-1kx9b165.js";import"./SpinnerImage-BkudWfq1.js";import"./Refresh-B4pw5fIj.js";import"./Card-CHoR3xtv.js";import"./ListCardContent-CQo81IWW.js";import"./CheckCircle-C9ks82Zc.js";import"./Metadata-CC1c-dcV.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-Dwanm5cR.js";import"./Link-DOQF65Al.js";import"./NumberSetting-1ro02nJS.js";import"./Slider-DjUFQzWq.js";import"./useMobilePicker-aO-YiZAz.js";import"./Chip-DQeIAE4W.js";import"./SelectSetting-BO8nEOzm.js";import"./Select-BE1QF9KJ.js";import"./Sync-BUOGrnW_.js";import"./use-merged-ref-B0xR_H0T.js";import"./ListCardAvatar-BRs5tEHy.js";import"./PlayArrow-Bd-fN4bT.js";import"./StyledFab-BQ8TocAv.js";import"./index-FS1yJLTV.js";import"./Virtuoso.util-CXiQrNer.js";import"./useAppTitle-CTTB27Yq.js";import"./useAppAction-36pgYXq4.js";const kr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
