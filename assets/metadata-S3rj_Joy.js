import{a as g,bT as y,bd as E}from"./index-D6RYBNhe.js";const f="webUI_",K=["deleteChaptersManuallyMarkedRead","deleteChaptersWhileReading","deleteChaptersWithBookmark","showAddToLibraryCategorySelectDialog","ignoreFilters","removeMangaFromCategories","devices","migrateChapters","migrateCategories","migrateTracking","deleteChapters","hideLibraryEntries","updateProgressAfterReading","updateProgressManualMarkRead"],b=[{keys:[{oldKey:"loadNextonEnding",newKey:"loadNextOnEnding"}]},{keys:[{oldKey:"deleteChaptersAutoMarkedRead",newKey:"deleteChaptersWhileReading"}]}],C=e=>{var a,r;const t=b.slice(0,e).reverse().find(s=>!!s.appKeyPrefix);return(r=(a=t==null?void 0:t.appKeyPrefix)==null?void 0:a.newPrefix)!=null?r:f},c=(e,t=f)=>{const r=!K.includes(e)&&y()!==E;return"".concat(t).concat(r?"".concat(y(),"_"):"").concat(e)},l=(e,t,a)=>Object.prototype.hasOwnProperty.call(e!=null?e:{},c(t,a)),w=e=>{if(!Number.isNaN(+e))return+e;if(e==="true"||e==="false")return e==="true";if(e!=="undefined")return e},v=e=>{if(!e)return;const t={};return e.forEach(({key:a,value:r})=>{t[a]=r}),t},F=e=>{if(e)return Object.entries(e).map(([t,a])=>({key:t,value:a}))},u=(e,t=f)=>{const a={};return Object.entries(e).forEach(([r,s])=>{r.startsWith(t)&&(a[r]=s)}),a},P=(e,t)=>{const a={...e};if(!t.appKeyPrefix)return a;const{oldPrefix:r,newPrefix:s}=t.appKeyPrefix,n=u(e,r),i=u(e,s),d=Object.keys(n).filter(o=>!Object.keys(i).includes(o));return d.length&&d.forEach(o=>{const h=o.replace(r,s);a[h]=n[o]}),a},m=(e,t,a)=>{const r={...e};if(!t.values)return r;const s=u(e,a);return t.values.forEach(({key:i,oldValue:d,newValue:p})=>{const o=M=>{e[M]===d&&(r[M]=p)};if(i===void 0){Object.keys(s).forEach(M=>{o(M)});return}l(e,i,a)&&o(c(i,a))}),r},O=(e,t)=>{const a={...e};return t.keys&&t.keys.forEach(({oldKey:s,newKey:n})=>{l(e,s)&&(l(e,n)||(a[c(n)]=e[c(s)]))}),a},k=e=>{if(!e)return;const t=[[0,e]];return b.forEach((r,s)=>{const n=s+1,i=t[n-1][1],d=P(i,r),p=m(d,r,C(n)),o=O(p,r);t.push([n,o])}),t.length>1?t.pop()[1]:{...e}},x=({meta:e},t,a,r=!0)=>{const s=r?k(e):e;return s===void 0||!l(s,t)?a:w(s[c(t)])},_=({meta:e},t,a)=>{const r={};return Object.entries(t).forEach(([s,n])=>{r[s]=x({meta:e},s,n,a)}),r},V=async(e,t,a,r)=>{const s=c(a);switch(t){case"category":await g.setCategoryMeta(e.id,s,r).response;break;case"chapter":await g.setChapterMeta(e.id,s,r).response;break;case"global":await g.setGlobalMetadata(s,r).response;break;case"manga":await g.setMangaMeta(e.id,s,r).response;break;default:throw new Error('requestUpdateMetadataValue: unknown holderType "'.concat(t,'"'))}},A=async(e,t,a)=>Promise.all(a.map(([r,s])=>V(e,t,r,s))),j=async e=>A({},"global",e),q=async(e,t)=>A(e,"manga",t);export{j as a,v as b,F as c,_ as g,q as r};
