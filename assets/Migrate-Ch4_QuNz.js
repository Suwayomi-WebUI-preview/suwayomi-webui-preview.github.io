import{u as A,aA as C,aq as I,Z as j,r as a,bN as w,b as S,bO as T,j as i,e as b,g as O,f as E}from"./index-C-m0jeKQ.js";import{E as k}from"./EmptyViewAbsoluteCentered-zEGoLAHu.js";import{G as B}from"./GridLayouts-C_mdDZhk.js";import{B as N}from"./BaseMangaGrid-C-mVS2Xx.js";import{u as P}from"./useAppTitleAndAction-DdqN1UVC.js";import"./Checkbox-DI1kh5mM.js";import"./SwitchBase-DGdpRXkz.js";import"./ListPreference-BVLRjGKl.js";import"./FormGroup-DRUre45f.js";import"./MangaGrid-DSB1sD1Q.js";import"./useManageMangaLibraryState-CDokZUyu.js";import"./Chapters-DrS4CiI_.js";import"./DateHelper-B3Vqf9Im.js";import"./Asserts-BoPs6v7g.js";import"./Mangas-DpFQuI_J.js";import"./ThreeStateCheckboxInput-7NFVWxP9.js";import"./CheckboxInput-Y0-zsS4I.js";import"./Delete-C06npybp.js";import"./Download-i9FU0Zv1.js";import"./ContinueReadingTooltip-Ba-FVVsd.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-kZQrxHW4.js";import"./SpinnerImage-BFYKtW5_.js";import"./Refresh-BClPDQIb.js";import"./Card-tIzHSJ7d.js";import"./ListCardContent-CPrmmiQK.js";import"./CheckCircle-fFnGEW4S.js";import"./Metadata-Bjjwc18q.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-MY9ojsam.js";import"./Link-DAzG7mLz.js";import"./NumberSetting-Bnak2S_H.js";import"./Slider-DI0ddmwd.js";import"./useMobilePicker-Bn--mUGd.js";import"./Chip-Df6B9ldg.js";import"./SelectSetting-CDy0NKWO.js";import"./Select-CceCteoz.js";import"./Sync-e9jGmrp-.js";import"./use-merged-ref-DjOuqelg.js";import"./ListCardAvatar-CLpw3UMb.js";import"./PlayArrow-CRFcChRU.js";import"./StyledFab-Ci56BMd9.js";import"./index-D4JlgeCY.js";import"./Virtuoso.util-CTxWti1X.js";import"./useAppTitle-DiZ3fN1f.js";import"./useAppAction-egprYjqo.js";const Or=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(P((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(B,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(k,{message:d("global.error.label.failed_to_load_data"),messageExtra:O(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(N,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Or as Migrate};
