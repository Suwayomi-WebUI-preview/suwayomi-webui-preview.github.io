import{u as A,aA as C,aq as I,Z as j,r as a,bH as w,b as S,bI as T,j as i,e as b,g as k,f as E}from"./index-B2qmtFS-.js";import{E as B}from"./EmptyViewAbsoluteCentered-Z5QyXw2n.js";import{G as O}from"./GridLayouts-Buvomnq4.js";import{B as P}from"./BaseMangaGrid-BB4Ur4IA.js";import{u as R}from"./useAppTitleAndAction-BTuCwAEJ.js";import"./Checkbox-CaUBEJJQ.js";import"./SwitchBase-CBt3rrZc.js";import"./ListPreference-g1h75Oak.js";import"./FormGroup-qlQrdjiw.js";import"./MangaGrid-0nFqqDsR.js";import"./useManageMangaLibraryState-DpaPzQPj.js";import"./Chapters-DTwZ3yGp.js";import"./DateHelper-B4Q41pKt.js";import"./Asserts-BNQKYA-m.js";import"./Mangas-DHJXX-e7.js";import"./ThreeStateCheckboxInput-Du2A13gp.js";import"./CheckboxInput-BiJ4ATpn.js";import"./Delete-CWE0Sr2b.js";import"./Download-DNxR_SIK.js";import"./ContinueReadingTooltip-Gy4JADRo.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-TJlYm28q.js";import"./SpinnerImage-D3DYDhfa.js";import"./Refresh-CncAKM9t.js";import"./Card-DegPPoKU.js";import"./ListCardContent-Dbg6RWIZ.js";import"./CheckCircle-CerTfRJQ.js";import"./Metadata-D-3npnJE.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-CBDAmsce.js";import"./Link-Bm3WW0bp.js";import"./NumberSetting-CbI7vmp1.js";import"./Slider-BywcBQUy.js";import"./useMobilePicker-CtT6x5rY.js";import"./Chip-DQ9GcoVb.js";import"./SelectSetting-CPzS9npR.js";import"./Select-ZjFbM0N5.js";import"./Sync-D2YBnTjH.js";import"./use-merged-ref-BHCZOaa8.js";import"./ListCardAvatar-DQmrQR84.js";import"./PlayArrow-DOoirFqb.js";import"./StyledFab-BQJeU3QF.js";import"./index-DIlmZxAa.js";import"./Virtuoso.util-HiU_bZRK.js";import"./useAppTitle-C6gfSlAE.js";import"./useAppAction-B00xo9Kx.js";const kr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
