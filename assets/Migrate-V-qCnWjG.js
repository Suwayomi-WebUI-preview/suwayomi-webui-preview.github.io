import{u as A,aA as C,aq as I,Z as j,r as a,bH as w,b as S,bI as T,j as i,e as b,g as k,f as E}from"./index-B8EETnhg.js";import{E as B}from"./EmptyViewAbsoluteCentered-CXvOePZg.js";import{G as O}from"./GridLayouts-3ZkDx7sv.js";import{B as P}from"./BaseMangaGrid-C-qbS95-.js";import{u as R}from"./useAppTitleAndAction-Nj5yIB2v.js";import"./Checkbox-Df9ncUuQ.js";import"./SwitchBase-DYpH7jk1.js";import"./ListPreference-CPr3TAsB.js";import"./FormGroup-B3McHMLp.js";import"./MangaGrid-CQAJ7ARI.js";import"./useManageMangaLibraryState-WlnS8Mj8.js";import"./Chapters-DunbWxQW.js";import"./DateHelper-Q-zA7nal.js";import"./Asserts-i-jVju4V.js";import"./Mangas-8A-A-vZS.js";import"./ThreeStateCheckboxInput-BZmQZPAL.js";import"./CheckboxInput-Cd9gL0jY.js";import"./Delete-mEyNvww8.js";import"./Download-DICI8lj6.js";import"./ContinueReadingTooltip-Dn74Gf9t.js";import"./Trackers-Bgo8y--2.js";import"./AvatarSpinner-Cvfchl_a.js";import"./SpinnerImage-CNE0Dhxm.js";import"./Refresh-BvRVle64.js";import"./Card-fe5Nrjom.js";import"./ListCardContent-C2AUJghJ.js";import"./CheckCircle-BmiKP0H9.js";import"./Metadata-EMzt68t8.js";import"./MUI.util-CEodEA2f.js";import"./CardActionArea-f50HaLD7.js";import"./Link-Dd0HI4ie.js";import"./NumberSetting-BCc7vBIA.js";import"./Slider-DbNWd54G.js";import"./useMobilePicker-KqDmQsMb.js";import"./Chip-UgEPrTco.js";import"./SelectSetting-JJ-sTKwm.js";import"./Select-D3ouKmmR.js";import"./Sync-VIS5-_le.js";import"./use-merged-ref-Czd1nbrH.js";import"./ListCardAvatar-SWZ7vejk.js";import"./PlayArrow-CORArtWX.js";import"./StyledFab-DNRuhYp7.js";import"./index-BQm6wSf2.js";import"./Virtuoso.util-BQjiSN2N.js";import"./useAppTitle-cyfJrGo9.js";import"./useAppAction-DwuTWPFn.js";const kr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=I("migrateGridLayout",j.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{kr as Migrate};
