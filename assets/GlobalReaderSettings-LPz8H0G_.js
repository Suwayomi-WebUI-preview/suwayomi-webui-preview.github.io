import{u as S,b as E,c$ as b,j as a,e as x,g as R,f as A,d0 as n,d1 as l}from"./index-vD27sjro.js";import{E as T}from"./EmptyViewAbsoluteCentered-az81beLC.js";import{R as _}from"./ReaderSettingsTabs-QyU58cHg.js";import{u as j}from"./useAppTitle-8wA5VNQk.js";import"./TabsMenu-DNiNCMrt.js";import"./Tabs-BPD0OrNi.js";import"./Trans-D6kOyGcp.js";import"./Slider-DEZMh-ZX.js";import"./CheckboxInput-Cx2ewf30.js";import"./Checkbox-h41FHwcZ.js";import"./SwitchBase-C3cU0PJD.js";import"./ListSubheader-U18MqinD.js";import"./Add-gi0CDkw1.js";const F=()=>{const{t:s}=S();j(s("reader.settings.title.reader"));const[d,m]=E.useState(0),{settings:p,request:{loading:u,error:i,refetch:g}}=b(),c=(e,t,r,o)=>{n.updateSetting(l,e,t,r,!0,o)};return u?a.jsx(x,{}):i?a.jsx(T,{message:s("global.error.label.failed_to_load_data"),messageExtra:R(i),retry:()=>g().catch(A())}):a.jsx(_,{activeTab:d,setActiveTab:m,areDefaultSettings:!0,settings:p,updateSetting:(e,t,r,o,f)=>c(e,t,r,f),deleteSetting:e=>n.deleteSetting(l,e,!0)})};export{F as GlobalReaderSettings};
