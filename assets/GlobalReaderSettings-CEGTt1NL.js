import{u as S,b as E,cY as b,j as a,e as x,g as R,f as _,cZ as n,c_ as l}from"./index-DNzWMDIq.js";import{E as A}from"./EmptyViewAbsoluteCentered-CpTPQwzc.js";import{R as T}from"./ReaderSettingsTabs-DE_u7ruA.js";import{u as j}from"./useAppTitle-C0CxbCoH.js";import"./TabsMenu-D6Fptn0Y.js";import"./Tabs-sovTGTRQ.js";import"./Trans-DoS4AKYZ.js";import"./Slider-lSeQ03vP.js";import"./CheckboxInput-C_3eXWUf.js";import"./Checkbox-C_be9LAc.js";import"./SwitchBase-DxMBGP13.js";import"./ListSubheader-D5OE2zUh.js";import"./Add-CB-ISlFc.js";const F=()=>{const{t:s}=S();j(s("reader.settings.title.reader"));const[m,p]=E.useState(0),{settings:u,request:{loading:d,error:i,refetch:g}}=b(),c=(e,t,r,o)=>{n.updateSetting(l,e,t,r,!0,o)};return d?a.jsx(x,{}):i?a.jsx(A,{message:s("global.error.label.failed_to_load_data"),messageExtra:R(i),retry:()=>g().catch(_())}):a.jsx(T,{activeTab:m,setActiveTab:p,areDefaultSettings:!0,settings:u,updateSetting:(e,t,r,o,f)=>c(e,t,r,f),deleteSetting:e=>n.deleteSetting(l,e,!0)})};export{F as GlobalReaderSettings};
