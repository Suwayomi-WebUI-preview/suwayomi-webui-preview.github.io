import{u as C,au as w,a as A,O as I,r as a,bw as j,e as S,bx as T,j as i,h as O,g as b,i as E}from"./index-B9sXdsff.js";import{E as k}from"./EmptyViewAbsoluteCentered-Bt5j7wSo.js";import{G as B}from"./GridLayouts-OqZ8h15d.js";import{B as P}from"./BaseMangaGrid-DjkoUzj2.js";import{u as R}from"./useAppTitleAndAction-DjJOzoVd.js";import"./Checkbox-CplIld-b.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-DktQh-yB.js";import"./SwitchBase-CNV_Zt6H.js";import"./ListPreference-DTyvDrL5.js";import"./FormGroup-CfHB8UxR.js";import"./MangaGrid-B5cUxDaX.js";import"./useManageMangaLibraryState-DThiVL2r.js";import"./ThreeStateCheckboxInput-kT5QDhvg.js";import"./CheckboxInput-nGAGiIlk.js";import"./Delete-CcMybldr.js";import"./Download-B2ss5cI2.js";import"./ChaptersDownloadActionMenuItems-Cf_rb7pK.js";import"./Trackers-COtG7wmP.js";import"./Card-DbJySDoj.js";import"./ListCardContent-B7hvkgHx.js";import"./Avatar-BQ4KlAHq.js";import"./TextField-syre69i-.js";import"./InputAdornment-DtSjeSvy.js";import"./CheckCircle-U6zAnUBW.js";import"./Metadata-CHXI9Ipx.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-DMEvphnQ.js";import"./Link-B5ijOrpF.js";import"./NumberSetting-NzOj-zwR.js";import"./Slider-Dw34jcFb.js";import"./useMobilePicker-Dw1ct5r-.js";import"./Chip-B3wcQm6N.js";import"./SelectSetting-s95c1gQI.js";import"./Select-mBzvVLN6.js";import"./Sync-CYvcIWmb.js";import"./use-merged-ref-CyP4J_9T.js";import"./ListCardAvatar-CjrqL715.js";import"./PlayArrow-DIerWG-6.js";import"./StyledFab-tSHcntjY.js";import"./index-DPIX3ULs.js";import"./Virtuoso.util-BKiqqNun.js";import"./useAppTitle-DSyYosGS.js";import"./useAppAction-DLir27iw.js";const Tr=()=>{var h,L;const{t:d}=C(),{sourceId:o}=w(),[s,y]=A("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:j}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(B,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(O,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(k,{message:d("global.error.label.failed_to_load_data"),messageExtra:b(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
