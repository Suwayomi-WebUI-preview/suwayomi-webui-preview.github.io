import{u as A,at as C,aj as j,W as I,r as a,bz as w,b as S,bA as T,j as i,e as b,g as k,f as E}from"./index-G46Fdggo.js";import{E as B}from"./EmptyViewAbsoluteCentered-CovG7djH.js";import{G as O}from"./GridLayouts-DzaH_VWG.js";import{B as P}from"./BaseMangaGrid-D_c4RRzC.js";import{u as R}from"./useAppTitleAndAction-khKl4iUr.js";import"./Checkbox-BfEM26Pl.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-CT6bsidr.js";import"./SwitchBase-qIEchQvh.js";import"./ListPreference-BhYC9fD9.js";import"./FormGroup-BwKYwlqA.js";import"./MangaGrid-BKLhIzrj.js";import"./useManageMangaLibraryState-CXKmNnsM.js";import"./ThreeStateCheckboxInput-BjQtgj2p.js";import"./CheckboxInput-CR2fS89x.js";import"./Delete-Dc95J15p.js";import"./Download-DJLffM7p.js";import"./ChaptersDownloadActionMenuItems-B_MKyCjW.js";import"./Trackers-COtG7wmP.js";import"./Card-DanTl0nA.js";import"./ListCardContent-Pa215Vat.js";import"./Avatar-DUmUcl_c.js";import"./TextField-BRgOKGna.js";import"./InputAdornment-BS64HwSB.js";import"./CheckCircle-D3a999rX.js";import"./Metadata-DOmjq81n.js";import"./MUI.util-CYBuX_Wz.js";import"./CardActionArea-OGaoKLza.js";import"./Link-Ctw05YYq.js";import"./NumberSetting-CnP08o-H.js";import"./Slider-kxcpEXb5.js";import"./useMobilePicker-oWkqoc7c.js";import"./Chip-ZKQNBQUj.js";import"./SelectSetting-ChFryBwm.js";import"./Select-CBhhpE2v.js";import"./Sync-CFemNj3K.js";import"./use-merged-ref-DGZZwTVB.js";import"./ListCardAvatar-BoCoTQrN.js";import"./PlayArrow-DMexcOWT.js";import"./StyledFab-C5yo8GOr.js";import"./index-As6JimRO.js";import"./Virtuoso.util-CLVBVGro.js";import"./useAppTitle-Datch0bI.js";import"./useAppAction-BcY93dSk.js";const Tr=()=>{var h,L;const{t:d}=A(),{sourceId:o}=C(),[s,y]=j("migrateGridLayout",I.List),g=a.graphQLClient.client.cache.readFragment({id:a.graphQLClient.client.cache.identify({__typename:"SourceType",id:o}),fragment:w}),[t,x]=S.useState(g!==null?!0:void 0),{data:e,loading:n,error:r,refetch:G}=a.useGetSource(T,o,{skip:!!t,notifyOnNetworkStatusChange:!0}),{sourceId:l,name:m}={sourceId:o,name:o,...g,...e==null?void 0:e.source},{data:p,loading:f,error:c,refetch:M}=a.useGetMigratableSourceMangas(l,{skip:!t,notifyOnNetworkStatusChange:!0});if(R((h=m!=null?m:l)!=null?h:d("migrate.title"),i.jsx(O,{gridLayout:s,onChange:y}),[s]),S.useEffect(()=>{n||t||x(!!e||!!(r!=null&&r.message.includes("The field at path '/source' was declared as a non null type")))},[n,r]),n||!r&&!t||f)return i.jsx(b,{});const u=r&&t===!1;if(u||c){const _=u?r:c;return i.jsx(B,{message:d("global.error.label.failed_to_load_data"),messageExtra:k(_),retry:()=>{u&&G().catch(E()),c&&M().catch(E())}})}return i.jsx(P,{hasNextPage:!1,loadMore:()=>{},isLoading:f,mangas:(L=p==null?void 0:p.mangas.nodes)!=null?L:[],gridLayout:s,mode:"migrate.search"})};export{Tr as Migrate};
